name: .NET Integration

on:
  push:
    branches: [ "master", "production" ]
  pull_request:
    branches: [ "master", "production" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - uses: actions/checkout@v4

    # Step 2: Setup .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Step 3: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Step 4: Build the project
    - name: Build
      run: dotnet build --no-restore

    # Step 5: Download dotCover CLI (latest version)
    - name: Download dotCover CLI
      run: |
        wget https://download.jetbrains.com/resharper/dotCover.2024.2.5/JetBrains.dotCover.CommandLineTools.2024.2.5.zip
        unzip JetBrains.dotCover.CommandLineTools.2024.2.5.zip -d dotCover

    # Step 6: Run tests with dotCover and generate coverage
    - name: Run tests with dotCover
      run: |
        dotCover/dotCover.sh cover --TargetExecutable=dotnet \
          --TargetArguments="test --no-build --verbosity normal" \
          --Output="TestResults/coverage/dotcover.dcvr" \
          --Filters="+:Logic.*"  # Only include the Logic project

    # Step 7: Generate HTML and XML coverage report
    - name: Generate coverage report
      run: |
        dotCover/dotCover.sh report --Source=TestResults/coverage/dotcover.dcvr \
          --Output=TestResults/coverage/coverage.html \
          --ReportType=HTML
        dotCover/dotCover.sh report --Source=TestResults/coverage/dotcover.dcvr \
          --Output=TestResults/coverage/coverage.xml \
          --ReportType=XML  # XML report for threshold checking

    # Step 8: Check for minimum 80% code coverage for Logic project
    - name: Enforce 80% coverage for Logic
      run: |
        coveragePercentage=$(grep -oP '(?<=<CoveragePercent>)[0-9]+' TestResults/coverage/coverage.xml)
        if [ "$coveragePercentage" -lt 80 ]; then
          echo "Code coverage for Logic project is below 80%! Failing the build."
          exit 1
        else
          echo "Code coverage for Logic project is sufficient: $coveragePercentage%"
        fi

    # Step 9: Upload the coverage report as an artifact
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: TestResults/coverage/coverage.html
